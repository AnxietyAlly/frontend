name: GitHub Actions AnxietyAlly
run-name: ${{ github.actor }} is merging branches or pushing to main
on: 
  pull_request:
  push:
    branches: [main]
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - run: echo "Building frontend has begun"
      - uses: actions/checkout@v4
      - run: npm ci
      - run: npm run build --if-present
      - run: echo "Building frontend has finished"
  unit-tests:
    runs-on: ubuntu-22.04
    needs: [build]
    steps:
    - run: echo "Testing frontend has begun"
    - uses: actions/checkout@v4
    - run: npm ci
    - run: npm run test
    - run: echo "Testing frontend has finished"
  deploy-to-render:
    runs-on: ubuntu-22.04
    needs: [unit-tests]
    steps:
    - name: Deploy
      # Only run this step if the branch is main
      if: github.ref == 'refs/heads/main'
      env:
        deploy_url: ${{ secrets.RENDER_DEPLOY_MAIN_HOOK_URL }}
      run: |
        curl "$deploy_url"
  eslint:
    runs-on: ubuntu-22.04
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
      - run: npm ci # or yarn install
      - uses: sibiraj-s/action-eslint@v3
        with:
          all-files: true
          # token: ${{ secrets.GITHUB_TOKEN }} # optional
          eslint-args: '--ignore-path=.gitignore --quiet'
          ignore-path: .eslintignore
          extensions: 'js,jsx,ts,tsx'
          annotations: true
  deepsource-coverage:
    runs-on: ubuntu-22.04
    needs: [build]
    env:
        DEEPSOURCE_DSN: https://cd414890ddd440b2b6d7d67d6517713e@app.deepsource.com
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install Dependencies
      run: npm ci

    # Run your tests and generate coverage file here
    - name: Run Tests and Generate Coverage
      run: npm run coverage

    # Report test-coverage to DeepSource using CLI
    - name: Report test-coverage to DeepSource
      run: |
        # Install the CLI
        curl https://deepsource.io/cli | sh

        # Send the report to DeepSource
        ./bin/deepsource report --analyzer test-coverage --key javascript --value-file ./coverage/cobertura-coverage.xml

  # trunk_check:
  #   name: Trunk Check Runner
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   permissions:
  #     checks: write # For trunk to post annotations
  #     contents: read # For repo checkout

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - run: npm install prettier-plugin-svelte

  #     - name: Trunk Check
  #       uses: trunk-io/trunk-action@v1